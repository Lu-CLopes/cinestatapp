mutation CreateUser(
    $userCreatedAt: Date!, 
    $userName: String!, 
    $userEmail: String!) 
    @auth(level: USER)
{ 
  user_insert(
    data: { 
        userCreatedAt: $userCreatedAt, 
        userEmail: $userEmail, 
        userId: "auth.uid", 
        userName: $userName
    }
  ) 
}

mutation CreateUnit(
    $unitName: String!, 
    $unitLocal: String!, 
    $unitMacCapacity: Int!, 
    $unitManagerId: UUID!, 
    $unitActive: Boolean!) 
    @auth(level: USER)
{ 
  unit_insert(
    data: { 
        unitActive: $unitActive, 
        unitLocal: $unitLocal, 
        unitMacCapacity: $unitMacCapacity, 
        unitManagerId: $unitManagerId, 
        unitName: $unitName
    }
  ) 
}
#mutation DeleteUser($id: UUID!) @auth(level: USER) {
#  user_delete(id: $id)
#}

mutation CreateMovie(
  $movieTitle: String!, 
  $movieGenre: String!, 
  $movieAgeClass: String!, 
  $movieDuration: Int!, 
  $movieDistrib: String!, 
  $movieFormat: String!, 
  $movieDirector: String!, 
  $movieActive: Boolean!) 
  @auth(level: USER)
{ 
  movie_insert(
    data: { 
      movieTitle: $movieTitle, 
      movieGenre: $movieGenre, 
      movieAgeClass: $movieAgeClass, 
      movieDuration: $movieDuration, 
      movieDistrib: $movieDistrib, 
      movieFormat: $movieFormat, 
      movieDirector: $movieDirector, 
      movieActive: $movieActive
    }
  ) 
}


mutation CreateAudience(
  $audienceUnitId: UUID!, 
  $audienceAge: Int!, 
  $audienceGender: String!, 
  $audienceFormat: String!) 
  @auth(level: USER)
{ 
  audience_insert(
    data: { 
        audienceAge: $audienceAge, 
        audienceFormat: $audienceFormat, 
        audienceGender: $audienceGender, 
        audienceUnitId: $audienceUnitId
    }
  ) 
}
